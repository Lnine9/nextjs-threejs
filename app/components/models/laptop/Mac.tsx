/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 -t -T -o Mac .\mac.glb
*/

import * as THREE from "three";
import React, { useEffect, useLayoutEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { LoopOnce } from "three";
import model from "./mac-transformed.glb";
import useCoolCameraRig from "@/app/hooks/useCoolCameraRig";

type GLTFResult = GLTF & {
  nodes: {
    macBook_TopPart_primitive0: THREE.Mesh;
    macBook_TopPart_primitive1: THREE.Mesh;
    macBook_TopPart_primitive2: THREE.Mesh;
    macBook_TopPart_primitive3: THREE.Mesh;
    macBook_TopPart_primitive4: THREE.Mesh;
    macBook_TopPart_primitive5: THREE.Mesh;
    macBook_TopPart_primitive6: THREE.Mesh;
    macBook_TopPart_primitive7: THREE.Mesh;
    macBook_TopPart_primitive8: THREE.Mesh;
    macBook_BottomPart_primitive0: THREE.Mesh;
    macBook_BottomPart_primitive1: THREE.Mesh;
    macBook_BottomPart_primitive2: THREE.Mesh;
    macBook_BottomPart_primitive3: THREE.Mesh;
    macBook_BottomPart_primitive4: THREE.Mesh;
    macBook_BottomPart_primitive5: THREE.Mesh;
    macBook_BottomPart_primitive6: THREE.Mesh;
  };
  materials: {
    Outline: THREE.MeshStandardMaterial;
    Screen: THREE.MeshStandardMaterial;
    Emission: THREE.MeshStandardMaterial;
    Logo: THREE.MeshStandardMaterial;
    Main: THREE.MeshStandardMaterial;
    ["__GLTFLoader._default"]: THREE.MeshStandardMaterial;
    Black: THREE.MeshStandardMaterial;
    Second: THREE.MeshStandardMaterial;
    KeysMain: THREE.MeshStandardMaterial;
    TopLine: THREE.MeshStandardMaterial;
    DarkGrey: THREE.MeshStandardMaterial;
  };
};

type ActionName = "macBook_TopPartAction";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(model) as GLTFResult;
  // @ts-ignore
  const { actions } = useAnimations<any>(animations, group);
  useLayoutEffect(() => {
    const anime = actions.macBook_TopPartAction!;
    anime.clampWhenFinished = true;
    anime.setLoop(LoopOnce, 1);
    anime.play();
  }, []);

  useCoolCameraRig(group, 15, -2);

  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-1, -0.7, 0]} rotation={[0.25, 1.15 * Math.PI, 0]}>
        <group
          name="macBook_TopPart"
          position={[0.76, 0.73, -0.43]}
          rotation={[1.55, 0, 0]}
          scale={[1.57, 0.03, 1.43]}
        >
          <mesh
            castShadow={true}
            name="macBook_TopPart_primitive0"
            geometry={nodes.macBook_TopPart_primitive0.geometry}
            material={materials.Outline}
          />
          <mesh
            castShadow={true}
            name="macBook_TopPart_primitive1"
            geometry={nodes.macBook_TopPart_primitive1.geometry}
            material={materials.Screen}
          />
          <mesh
            castShadow={true}
            name="macBook_TopPart_primitive2"
            geometry={nodes.macBook_TopPart_primitive2.geometry}
            material={materials.Emission}
          />
          <mesh
            castShadow={true}
            name="macBook_TopPart_primitive3"
            geometry={nodes.macBook_TopPart_primitive3.geometry}
            material={materials.Logo}
          />
          <mesh
            castShadow={true}
            name="macBook_TopPart_primitive4"
            geometry={nodes.macBook_TopPart_primitive4.geometry}
            material={materials.Main}
          />
          <mesh
            castShadow={true}
            name="macBook_TopPart_primitive5"
            geometry={nodes.macBook_TopPart_primitive5.geometry}
            material={materials["__GLTFLoader._default"]}
          />
          <mesh
            castShadow={true}
            name="macBook_TopPart_primitive6"
            geometry={nodes.macBook_TopPart_primitive6.geometry}
            material={materials["__GLTFLoader._default"]}
          />
          <mesh
            castShadow={true}
            name="macBook_TopPart_primitive7"
            geometry={nodes.macBook_TopPart_primitive7.geometry}
            material={materials["__GLTFLoader._default"]}
          />
          <mesh
            castShadow={true}
            name="macBook_TopPart_primitive8"
            geometry={nodes.macBook_TopPart_primitive8.geometry}
            material={materials["__GLTFLoader._default"]}
          />
        </group>
        <group
          name="macBook_BottomPart"
          position={[-1.07, 0.7, -1.86]}
          scale={[1.57, 0.03, 1.43]}
        >
          <mesh
            castShadow={true}
            name="macBook_BottomPart_primitive0"
            geometry={nodes.macBook_BottomPart_primitive0.geometry}
            material={materials.Black}
          />
          <mesh
            castShadow={true}
            name="macBook_BottomPart_primitive1"
            geometry={nodes.macBook_BottomPart_primitive1.geometry}
            material={materials.Main}
          />
          <mesh
            castShadow={true}
            name="macBook_BottomPart_primitive2"
            geometry={nodes.macBook_BottomPart_primitive2.geometry}
            material={materials.Second}
          />
          <mesh
            castShadow={true}
            name="macBook_BottomPart_primitive3"
            geometry={nodes.macBook_BottomPart_primitive3.geometry}
            material={materials.KeysMain}
          />
          <mesh
            castShadow={true}
            name="macBook_BottomPart_primitive4"
            geometry={nodes.macBook_BottomPart_primitive4.geometry}
            material={materials.Logo}
          />
          <mesh
            castShadow={true}
            name="macBook_BottomPart_primitive5"
            geometry={nodes.macBook_BottomPart_primitive5.geometry}
            material={materials.TopLine}
          />
          <mesh
            castShadow={true}
            name="macBook_BottomPart_primitive6"
            geometry={nodes.macBook_BottomPart_primitive6.geometry}
            material={materials.DarkGrey}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(model);
